#+TITLE: Backlog

* Initialization and Configuration

** Traits - a re-engineering of the configuration process

- [X] Create the concept of xorns' plugin: module [[file:~/work/emacs/xorns/horns/xorns-traits.el][traits]] was created in
  release ~0.11.0~.  Two types of plugins must be defined, those that are
  subordinate to a major mode or those that are global to the system.
- [ ] Traits must be extended to include the following concepts.
  - [ ] Always enabled traits.
  - [ ] Multi-domain trait names allowing hierarchical control.
  - [ ] Define multiple execution bodies for the same trait using the
    ~trait==value~ condition syntax.
  - [ ] Include "alternative-options" for a single logical trait concept, for
    example, ~eglot~ and ~lsp-mode~, for language servers.
  - [ ] Consider having modal traits that can be executed every time the mode
    is entered instead of just the first time.
- [-] Migrate global configurations to use traits.
  - [X] Basic ~use-package~ settings.
  - [ ] Traits related to major modes.
  - [ ] Hierarchical options.
- [ ] Migrate current configurations to use ~traits~.
  - [ ] [[file:~/work/emacs/xorns/horns/xorns-mode-line.el::(defvar >>=|mode-line/kind nil][mode-line/kind]].
  - [ ] [[file:~/work/emacs/xorns/horns/xorns-minibuffer.el::(defvar >>=|minibuffer/completing-framework nil][minibuffer/completing-framework]].
  - [ ] [[file:~/work/emacs/xorns/horns/xorns-devop.el::defvar >>=|devops/features '(docker][devops/features]].
  - [ ] [[file:~/work/emacs/xorns/horns/xorns-system.el::(>>=trait treemacs][treemacs]].
  - [ ] [[file:~/work/emacs/xorns/horns/xorns-prog-extra.el::(defvar >>=|programming/extra-languages nil][programming/extra-languages]].
  - [ ] [[file:~/work/emacs/xorns/horns/xorns-prog-extra.el::(defvar >>=|programming/extra-features nil][programming/extra-features]].
- [ ] Create the documentation for the new module ~traits~.

** Fonst and Themes

- [ ] Improve font configuration tools.  Use next code as an example:

  #+BEGIN_SRC emacs-lisp
    ;; This causes xorns to issue some messages, but somehow it works.
    (setq-default
        >>=|font-settings
        '((default
            ((t
               ( :inherit nil
                 :extend nil
                 :stipple nil
                 :inverse-video nil
                 :box nil
                 :strike-through nil
                 :overline nil
                 :underline nil
                 :slant normal
                 :weight light
                 :height 125
                 :width normal
                 :family "RobotoMono Nerd Font"))))
           (bold
             ((t
                ( :inherit nil
                  :extend nil
                  :stipple nil
                  :inverse-video nil
                  :box nil :strike-through nil
                  :overline nil
                  :underline nil
                  :slant normal
                  :weight normal
                  :height 125
                  :width normal
                  :family "RobotoMono Nerd Font"))))
           (lsp-lsp-flycheck-warning-unnecessary-face
             ((t (:underline (:color "DarkOrange" :style wave)))) t)
          (lsp-ui-sideline-code-action
            ((t (:foreground "sienna" :underline t))))
          (markdown-code-face ((t nil)))))
  #+END_SRC



* Misc

- [ ] Use manu's configuration file to resolve some configuration issues and
  make new definitions.
- [ ] Remove ~auto-fill-mode~ from ~prog-mode~ derived modes.  SCHEDULED:
  <2024-07-01>
- [ ] Create a framework to register formatters to act before saving in a safe
  way.
  - [ ] Use =ruff-format= instead of =blacken= to format Python source.
- [ ] Check [[file:~/work/emacs/xorns/horns/xorns-prog-extra.el::(use-package rescript-mode][ReScript]] configuration.  See [[https://github.com/jjlee/rescript-mode][github repository]] for more
  information.
- [-] Upgrade support to Emacs version > 29.1.
  - [X] Now =use-package= is part of Emacs.  Change [[file:~/work/emacs/xorns/horns/xorns-packages.el::defun >>=package/ensure (package][>>=package/ensure]] function
    to test =(require package nil 'noerror)= instead of =(package-installed-p
    package)=.
  - [ ] Remove the tools and code that allow 'xorns' to be installed as an
    ELPA package.
  - Remove fallback [[file:~/work/emacs/xorns/horns/compat][compatibility]] support.
- [ ] Check 'obsolete' definitions to remove some.
- [ ] On =use-package=, check =:autoload= keyword to replace some =:commands=
  definitions.
- [ ] Deft is too slow after Emacs 28.  Function =deft-parse-summary= was
  replaced.  Check after Emacs or Deft are updated.
- [ ] After configuring 'js2-mode', check ELPA for more packages that use this
  one.
- [X] Remove =xorns-mail= module (check =xorns-building-blocks=).
- [ ] Check =system-packages=, and =use-package-ensure-system-package= for
  =use-package=.
- [ ] Change =email= from =med@merchise.org= to =med.merchise@gmail.com=, and
  =date= to =2024=.
- [ ] Check why =custom-file= is loaded twice in debug mode (module
  =xorns-config=).
- [ ] Upgrade =xorns= to start using =package-vc= after Emacs v29.
- [ ] Command to kill all =special-mode= buffers, see variables defined in
  =clean-buffer-list=, see also =quit-window= command.
- [ ] Create an inverse version of the =quit-window= command to allow
  configuring the =q= key-binding: =(kill-window &optional BURY WINDOW)=.
- [ ] Create tools to work with recently opened projects, see [[file:~/.emacs.d/elpa/projectile-20231130.1934/projectile.el::defun projectile-recentf (][projectile]].
- [ ] Replace [[help:custom-file][custom-file]] variable to the corresponding function.
- [ ] Check [[https://www.emacswiki.org/emacs/awesome-tab.el][awesome-tab]] to configure the [[file:/usr/share/emacs/29.1/lisp/tab-line.el.gz][tab-line]].
- [ ] Check orphan packages.
- [ ] Define some keys in [[file:~/work/emacs/xorns/horns/xorns-system.el::(use-package treemacs][treemacs]] similar to ~dired~, for example,
  =(keymap-set treemacs-mode-map "+" 'treemacs-create-dir)=.
- [ ] Create a module to configure LLM clients.  See the sites:
  - https://github.com/karthink/gptel - it is in ELPA.
  - https://github.com/xenodium/chatgpt-shell - also in ELPA
- [ ] Create "[[https://www.emacswiki.org/emacs/UnitTesting][Unit Testing]]" modules.  See also the article "[[https://exercism.org/docs/tracks/elisp/tests][Testing on the
  Emacs Lisp track]]".


* Improve EXWM

- [ ] Check why [[file:~/.emacs.d/elpa/exwm-0.28/exwm.el][EXWM]] has a new "Kill terminal?" prompt.
- [ ] Check [[https://wiki.archlinux.org/title/EXWM][Use of multi-monitor on EXWM]].
- [ ] Check [[help:browse-url-at-point][browse-url-at-point]] use.
  - [ ] Maybe replace this to enable [[help:goto-address-mode][goto-address-mode]] in all proper buffers.
  - [ ] Create a new command to always return a URL in case one is not found
    around the point, it can be a search query or the browser's empty page.
- [ ] Configure [[file:~/work/emacs/xorns/horns/xorns-exwm.el::defun >>=exwm/enlarge-window-horizontally (&optional delta][exwm-layout]] using a minor mode to resize windows.
- [ ] Look for better options to show a System Tray.  Maybe use the project
  [[https://github.com/ultrabug/py3status][py3status]] as a base to create a similar one named 'exwm-status'.
- [ ] Move [[file:~/work/emacs/xorns/horns/xorns-exwm.el::defun >>-exwm/swap-last-buffers (][>>-exwm/swap-last-buffers]] to module [[file:~/work/emacs/xorns/horns/xorns-window.el][window]].
- [ ] Fix X App losing focus when switching workspaces.  Below is a
  experimental code being tested.

  #+BEGIN_SRC emacs-lisp
    (add-hook
      'exwm-workspace-switch-hook
      (defun >>-workspace-switch ()
        (when (eq exwm-workspace-current-index 2)
          (let* ((frame (selected-frame))
                 (buf (current-buffer))
                 (win (frame-selected-window frame)) )
            (message ">>= current buffer %s." buf)
            (next-window)
            (switch-to-buffer buf nil 'force)))))

    (setq exwm-workspace-switch-hook '(exwm-systemtray--on-workspace-switch))
  #+END_SRC

  - Commenting the line containing:

    #+BEGIN_SRC emacs-lisp
      (cl-pushnew xcb:Atom:_NET_WM_STATE_HIDDEN exwm--ewmh-state)
    #+END_SRC

    on file =exwm-layout.el=, will do the work.  But this cannot be a
    definitive solution because it can cause additional problems.  See issues
    [[https://github.com/ch11ng/exwm/issues/759][759]] and [[https://github.com/ch11ng/exwm/pull/933][933]].

References:
- A [[https://github.com/johanwiden/exwm-setup][complete configuration]].
- [[https://wiki.archlinux.org/title/EXWM][Arch Linux Wiki]].
- [[https://github.com/emacs-exwm/exwm][GitHub Repository]].

* Startup error "Symbol's value as variable is void"

- [ ] Emacs might fail to start with error "Symbol's value as variable is
  void" if =file-name-handler-alist= variable is set to nil.  This is done to
  improve startup time.  This not happens when option
  =--without-compress-install= is not used building Emacs.  We created the
  =>>-startup-file-name-handler-alist= function to avoid this in =init.el=
  file.

See also:
- [ ] https://github.com/syl20bnr/spacemacs/issues/11585
- [ ] https://mail.gnu.org/archive/html/emacs-devel/2022-08/msg00234.html

* Integrate Emacs Copilot

- [ ] https://github.com/jart/emacs-copilot

* Separate LSP sessions by "some" configuration

- [ ] Every time a =Python= file is opened it is added to the same =LSP=
  session.  There would be some problems when simultaneously opening files
  from different projects using different versions of Python.
- [ ] You may need to activate a new =LSP= session.  Temporarily you can call
  =lsp-workspace-remove-all-folders= every time you need to switch to a new
  workspace.
- [ ] See command =lsp-describe-session=, and the article "[[https://github.com/emacs-lsp/lsp-mode/discussions/3095][Workspaces in
  emacs-lsp]]" for more information.
- [ ] See [[https://github.com/nex3/perspective-el][Perspective for Emacs]].

* Use browser automation library to create some advanced utilities

- [ ] The best candidate could be [[https://github.com/microsoft/playwright-python][Playwright]].  See how to [[https://blog.apify.com/unlocking-the-potential-of-brave-and-playwright-for-browser-automation/][use it for
  brave-browser]].

* Start using [[https://github.com/magnars/expand-region.el][expand-region]]

- [ ] For example:

  #+BEGIN_SRC emacs-lisp
    (use-package expand-region
      :ensure t
      :bind
      ("C-=" . er/expand-region)
      ("C--" . er/contract-region))
  #+END_SRC

* Fix the issue that some UNICODE characters are not displayed

- [ ] Install ttf-dejavu and ttf-dejavu-nerd, [[https://superuser.com/questions/13562/how-to-make-unicode-characters-visible-in-emacs][try and set]] "DejaVu Sans Mono"
  as the font.
- [ ] Use [[https://github.com/syohex/emacs-fontawesome][fontawesome]] utilities from ELPA.
- [ ] Complement [[file:xorns.org::*Prerequisites][related documentation]].

* Improve configuration of our [[file:~/work/emacs/xorns/horns/xorns-window.el][window]] module

- [-] Redefine configuration of tabs.
  - [X] There must be three modes in the >[[file:~/work/emacs/xorns/horns/xorns-window.el::(defvar >>=|tab-line/initial-mode 'toolbox][>=|tab-line/initial-mode]] variable:
    (toolbox, global, and local).  Standard modes should not be mutually
    exclusive with the new toolbox mode.
  - [X] There must be a [[help:tab-line-tabs-function][tab-line-tabs-function]] that is valid for all three
    modes, always isolating toolbox buffers from the others.
  - [ ] Use icons in labels like =dired=.
  - [ ] Disable =magit= text buffers.
  - [X] Create navigation commands and assign keys to them.
- [ ] Use [[help:display-buffer-alist][display-buffer-alist]] variable for toolbox buffers.  That will make
  the [[file:~/work/emacs/xorns/horns/xorns-window.el::defun >>=toolbox/switch-to-buffer (buffer-or-name][>>=toolbox/switch-to-buffer]] function unnecessary.  See this [[https://whhone.com/emacs-config/#terminal-with-vterm][vterm]]
  configuration secction as an example.
- [ ] Rename [[file:~/work/emacs/xorns/horns/xorns-window.el::(define-minor-mode >>=window-coach-mode][>>=window-coach-mode]].

* Check good configuration examples

- [ ] [[https://github.com/terlar][Terje Larsen]].
  - [ ] Configure [[https://github.com/terlar/emacs-config][use-package]] depending on the 'init-file-debug' variable.
- [ ] Learn to Love the [[https://systemcrafters.net/emacs-from-scratch/learn-to-love-the-terminal-modes/][Terminal Modes]].
- [ ] Nicolas De Jaeghere ([[https://github.com/Koekelas/dotfiles][dotfiles]]).

* Configuring terminals

- [ ] Check package [[https://github.com/justinlime/toggle-term.el][toggle-term]] for quickly toggle persistent term buffers.
- [ ] The configuration of terminals in module =xorns-term= must be reviewed.
  Even when the configuration of [[file:~/work/emacs/xorns/horns/xorns-term.el::add-hook 'emacs-startup-hook '>>-term/vt-setup)][vterm]] is optional this package is installed
  from ELPA and the C module =vterm-module= is compiled.
